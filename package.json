{
  "name": "rest-api-typescript",
  "version": "1.0.0",
  "description": "An example on how to create a REST API using Typescript, Express, Prisma, Zod, JWT, Jest, Bcrypt and Docker.",
  "main": "index.js",
  "scripts": {
    "start": "tsc --build --force && node dist/src/index.js",
    "db:start": "docker run --name rest-api-db-dev -e POSTGRES_PASSWORD=postgres -d -p 5433:5432 postgres",
    "db:stop": "docker rm rest-api-db-dev -f",
    "test:docker:stop": "docker rm postgres-test -f",
    "test:docker:start": "npm run test:docker:stop && docker run --name postgres-test -e POSTGRES_PASSWORD=postgres  -d -p 5434:5432 postgres",
    "test": "npm run test:docker:start && dotenv -e .env.test npx prisma migrate deploy && dotenv -e .env.test jest -i"
  },
  "keywords": [
    "rest-api",
    "nodejs",
    "typescript",
    "express",
    "prisma"
  ],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.14",
    "@types/jest": "^29.2.3",
    "@types/jsonwebtoken": "^8.5.9",
    "dotenv-cli": "^6.0.0",
    "jest": "^29.3.1",
    "prisma": "^4.7.1",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "@prisma/client": "^4.7.1",
    "bcrypt": "^5.1.0",
    "express": "^4.18.2",
    "jsonwebtoken": "^8.5.1",
    "winston": "^3.8.2",
    "zod": "^3.19.1"
  }
}
